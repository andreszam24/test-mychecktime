name: iOS Beta (TestFlight)

on:
  workflow_dispatch: {}

jobs:
  build:
    runs-on: macos-14

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Instalar bundler y gems
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install

      - name: Build web y Capacitor
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
        run: |
          npm install --no-audit --no-fund
          npx ionic --version || npx -y @ionic/cli --version
          if [ ! -d ios ]; then npx cap add ios; fi
          npx ionic build --prod
          npx cap sync ios
      
      - name: Deshabilitar firma de código para Pods
        run: |
          PODFILE="ios/App/Podfile"
          cat <<EOF >> "$PODFILE"

          post_install do |installer|
            installer.pods_project.targets.each do |target|
              target.build_configurations.each do |config|
                config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
              end
            end
          end
          EOF
          cd ios/App && pod install && cd ../..

      - name: Inyectar permisos en Info.plist (cámara)
        run: |
          INFO_PLIST="ios/App/App/Info.plist"
          test -f "$INFO_PLIST"
          /usr/libexec/PlistBuddy -c "Add :NSCameraUsageDescription string 'Necesitamos acceso a la cámara para escanear códigos QR y códigos de barras.'" "$INFO_PLIST" 2>/dev/null || \
          /usr/libexec/PlistBuddy -c "Set :NSCameraUsageDescription 'Necesitamos acceso a la cámara para escanear códigos QR y códigos de barras.'" "$INFO_PLIST"

      - name: Setup SSH for match
        env:
          MATCH_SSH_PRIVATE_KEY: ${{ secrets.MATCH_SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$MATCH_SSH_PRIVATE_KEY" > ~/.ssh/match_key
          chmod 600 ~/.ssh/match_key
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/match_key
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Fastlane beta (TestFlight)
        env:
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
          ASC_KEY_B64: ${{ secrets.ASC_KEY_B64 }}
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}  # git@github.com:<OWNER>/ios-signing-certificates.git
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          APP_IDENTIFIER: ${{ secrets.APP_IDENTIFIER }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          GIT_SSH_COMMAND: 'ssh -i ~/.ssh/match_key -o UserKnownHostsFile=~/.ssh/known_hosts -o StrictHostKeyChecking=yes'
        run: bundle exec fastlane beta

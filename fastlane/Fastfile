default_platform(:ios)

platform :ios do
  desc "Build iOS y subir a TestFlight"
  lane :beta do
    api_key = app_store_connect_api_key(
      key_id: ENV["ASC_KEY_ID"],
      issuer_id: ENV["ASC_ISSUER_ID"],
      key_content: Base64.decode64(ENV["ASC_KEY_B64"]),
      in_house: false
    )

    create_keychain(
      name: "build.keychain",
      password: "ci",
      default_keychain: true,
      unlock: true,
      timeout: 3600
    )

    match(
      type: "appstore",
      app_identifier: ENV["APP_IDENTIFIER"],
      git_url: ENV["MATCH_GIT_URL"],
      shallow_clone: true,
      readonly: false,
      keychain_name: "build.keychain",
      keychain_password: "ci",
      api_key: api_key
    )

    # Asegura que la plataforma iOS exista en el runner
    Dir.chdir(File.expand_path("..", __dir__)) do
      unless Dir.exist?("ios")
        sh("npx cap add ios")
        sh("npx cap sync ios")
      end

    xcodeproj_path = File.expand_path("ios/App/App.xcodeproj")
    UI.user_error!("Could not find Xcode project at #{xcodeproj_path}") unless File.exist?(xcodeproj_path)

    update_project_team(
        path: xcodeproj_path,
        teamid: ENV["APPLE_TEAM_ID"]
      )

    increment_build_number(
      xcodeproj: xcodeproj_path,
      build_number: Time.now.strftime('%Y%m%d%H%M')
    )

    build_app(
      workspace: File.expand_path("ios/App/App.xcworkspace"),
      scheme: "App",
      export_method: "app-store",
      output_directory: "build",
      clean: true,
      export_team_id: ENV["APPLE_TEAM_ID"],
      xcargs: "DEVELOPMENT_TEAM=#{ENV['APPLE_TEAM_ID']} CODE_SIGN_STYLE=Automatic"
    )

    upload_to_testflight(
      api_key: api_key,
      skip_waiting_for_build_processing: true
    )
    end
  end
end
